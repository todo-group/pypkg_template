[build-system]
requires = ["setuptools", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pypkg_template"
description = "Sample Python package"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]
requires-python = ">=3.8,<3.14"
dependencies = []
dynamic = ["version"]

[tool.setuptools.dynamic]
version = { attr = "pypkg_template._version.version" }

[tool.setuptools_scm]
write_to = "src/pypkg_template/_version.py"

[tool.setuptools]
package-dir = { "" = "src" }

[project.optional-dependencies]
dev = ["furo", "nox", "pre-commit", "pytest", "pytest-cov", "sphinx"]

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
  # Conflicts with ruff format
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",

  # Custom
  "ANN10",   # missing-type-XXX
  "CPY",     # flake8-copyright
  "E74",     # ambiguous-XXX-name
  "EM",      # flake8-errmsg
  "ERA",     # eradicate
  "PLR2004", # magic-value-comparison
  "S101",    # assert
  "T20",     # flake8-print
  "TRY003",  # raise-vanilla-args
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
  "D104", # undocumented-public-package
  "F401", # unused-import
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
strict = true
files = ["src/**/*.py", "tests/**/*.py"]

[tool.pyright]
include = ["**/*.py"]

[tool.coverage.run]
omit = ["src/pypkg_template/_version.py"]

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]
